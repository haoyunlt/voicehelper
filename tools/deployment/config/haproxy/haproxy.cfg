# HAProxy 配置文件 - VoiceHelper AI
# 版本: 2.8

global
    daemon
    log stdout local0 info
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy

    # SSL 配置
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# 统计页面
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE

# 前端配置
frontend voicehelper_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/voicehelper.pem
    
    # 重定向 HTTP 到 HTTPS
    redirect scheme https if !{ ssl_fc }
    
    # 安全头
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # 路由规则
    acl is_api path_beg /api/
    acl is_ws hdr(upgrade) -i websocket
    acl is_portal path_beg /portal/
    acl is_admin path_beg /admin/
    acl is_docs path_beg /docs/
    
    # 后端选择
    use_backend api_gateway if is_api
    use_backend websocket_gateway if is_ws
    use_backend developer_portal if is_portal
    use_backend admin_backend if is_admin
    use_backend swagger_docs if is_docs
    default_backend web_frontend

# API 网关后端
backend api_gateway
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server gateway1 gateway:8080 check inter 10s fall 3 rise 2
    server gateway2 gateway:8080 check inter 10s fall 3 rise 2 backup

# WebSocket 网关后端
backend websocket_gateway
    balance source
    option httpchk GET /health
    
    server gateway1 gateway:8080 check inter 10s fall 3 rise 2
    server gateway2 gateway:8080 check inter 10s fall 3 rise 2 backup

# Web 前端后端
backend web_frontend
    balance roundrobin
    option httpchk GET /api/health
    http-check expect status 200
    
    server frontend1 frontend:3000 check inter 10s fall 3 rise 2
    server frontend2 frontend:3000 check inter 10s fall 3 rise 2 backup

# 开发者门户后端
backend developer_portal
    balance roundrobin
    option httpchk GET /health
    
    server portal1 developer-portal:3002 check inter 10s fall 3 rise 2

# 管理后台后端
backend admin_backend
    balance roundrobin
    option httpchk GET /health
    
    server admin1 admin:5001 check inter 10s fall 3 rise 2

# API 文档后端
backend swagger_docs
    balance roundrobin
    
    server swagger1 swagger-ui:8080 check inter 10s fall 3 rise 2

# 监控配置
listen monitoring
    bind *:9000
    mode http
    stats enable
    stats uri /
    stats realm HAProxy\ Statistics
    stats auth admin:admin123
    
    # Prometheus 指标
    http-request use-service prometheus-exporter if { path /metrics }
