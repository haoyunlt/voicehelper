# VoiceHelper 配置和密钥
apiVersion: v1
kind: ConfigMap
metadata:
  name: voicehelper-config
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: voicehelper
    app.kubernetes.io/component: config
data:
  # 环境配置
  ENV: "production"
  GIN_MODE: "release"
  LOG_LEVEL: "info"
  
  # 服务端口配置
  GATEWAY_PORT: "8080"
  ALGO_SERVICE_PORT: "8000"
  VOICE_SERVICE_PORT: "8001"
  FRONTEND_PORT: "3000"
  
  # 数据库配置
  POSTGRES_HOST: "postgresql-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "voicehelper"
  POSTGRES_MAX_CONNECTIONS: "100"
  POSTGRES_SSL_MODE: "disable"
  
  # Redis 配置
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_MAX_CONNECTIONS: "100"
  
  # 向量服务配置
  BGE_SERVICE_URL: "http://bge-service:8080"
  FAISS_SERVICE_URL: "http://faiss-service:8081"
  VECTOR_DIMENSION: "1024"
  
  # NATS 配置
  NATS_URL: "nats://nats-service:4222"
  NATS_CLUSTER_ID: "voicehelper-cluster"
  
  # 服务发现配置
  ALGO_SERVICE_URL: "http://algo-service:8000"
  VOICE_SERVICE_URL: "http://voice-service:8001"
  GATEWAY_SERVICE_URL: "http://gateway-service:8080"
  
  # 监控配置
  PROMETHEUS_ENABLED: "true"
  JAEGER_ENABLED: "true"
  JAEGER_ENDPOINT: "http://jaeger-collector.voicehelper-monitoring:14268/api/traces"
  
  # 功能开关
  VOICE_ENABLED: "true"
  CHAT_ENABLED: "true"
  DOCUMENT_ENABLED: "true"
  ANALYTICS_ENABLED: "true"
  
  # 性能配置
  MAX_CONCURRENT_REQUESTS: "1000"
  REQUEST_TIMEOUT: "30s"
  IDLE_TIMEOUT: "60s"
  
  # 文件上传配置
  MAX_FILE_SIZE: "100MB"
  ALLOWED_FILE_TYPES: "pdf,doc,docx,txt,md,jpg,jpeg,png,gif,mp3,wav,m4a"
  
  # 缓存配置
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"
  
  # 安全配置
  CORS_ALLOWED_ORIGINS: "*"
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"

---
apiVersion: v1
kind: Secret
metadata:
  name: voicehelper-secrets
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: voicehelper
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # 数据库密钥
  POSTGRES_USER: "voicehelper"
  POSTGRES_PASSWORD: "VoiceHelper2025!@#"
  
  # Redis 密钥
  REDIS_PASSWORD: "Redis2025!@#"
  
  # JWT 密钥
  JWT_SECRET: "voicehelper-jwt-secret-key-2025-production"
  JWT_EXPIRES_IN: "24h"
  
  # API 密钥
  ARK_API_KEY: ""  # 需要用户配置
  GLM_API_KEY: ""  # 需要用户配置
  OPENAI_API_KEY: ""  # 可选
  ANTHROPIC_API_KEY: ""  # 可选
  
  # 微信配置
  WECHAT_APP_ID: ""  # 需要用户配置
  WECHAT_APP_SECRET: ""  # 需要用户配置
  
  # 邮件配置
  SMTP_SERVER: ""
  SMTP_PORT: "587"
  SMTP_USERNAME: ""
  SMTP_PASSWORD: ""
  SMTP_FROM: "noreply@voicehelper.ai"
  
  # 对象存储配置 (MinIO)
  MINIO_ACCESS_KEY: "voicehelper"
  MINIO_SECRET_KEY: "VoiceHelper2025Storage"
  MINIO_BUCKET: "voicehelper-data"
  
  # 加密密钥
  ENCRYPTION_KEY: "voicehelper-encryption-key-2025-32bit"
  
  # 第三方服务密钥
  AZURE_SPEECH_KEY: ""  # 可选
  AZURE_SPEECH_REGION: ""  # 可选
  GOOGLE_CLOUD_KEY: ""  # 可选

---
# TLS 证书配置
apiVersion: v1
kind: Secret
metadata:
  name: voicehelper-tls
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: voicehelper
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # 这里需要替换为实际的证书和私钥
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # base64 encoded private key

---
# 监控配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - voicehelper
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
      
      - job_name: 'kubernetes-services'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - voicehelper
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
  
  alerting-rules.yml: |
    groups:
    - name: voicehelper.rules
      rules:
      - alert: HighCPUUsage
        expr: (100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes"
      
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% for more than 5 minutes"
      
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service is down"
          description: "Service {{ $labels.instance }} is down for more than 1 minute"
