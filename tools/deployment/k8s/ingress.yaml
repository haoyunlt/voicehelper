# VoiceHelper Kubernetes Ingress 和负载均衡配置

# Nginx Ingress Controller 部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
  namespace: voicehelper
  labels:
    app: nginx-ingress
    component: load-balancer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
        component: load-balancer
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-service
  namespace: voicehelper
  labels:
    app: nginx-ingress
spec:
  selector:
    app: nginx-ingress
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
    nodePort: 30080
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
    nodePort: 30443
  type: NodePort
---
# VoiceHelper 主应用 Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: voicehelper-ingress
  namespace: voicehelper
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    # WebSocket 支持
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
spec:
  ingressClassName: nginx
  rules:
  - host: voicehelper.local
    http:
      paths:
      # 前端应用
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 3000
      # API 网关
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8080
      # WebSocket 连接
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8080
      # 语音服务
      - path: /voice
        pathType: Prefix
        backend:
          service:
            name: voice-service
            port:
              number: 8001
      # 算法服务 (直接访问)
      - path: /algo
        pathType: Prefix
        backend:
          service:
            name: algo-service
            port:
              number: 8000
---
# Dify 平台 Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dify-ingress
  namespace: voicehelper-dify
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  ingressClassName: nginx
  rules:
  - host: voicehelper.local
    http:
      paths:
      # Dify Web 控制台
      - path: /dify(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: dify-web-service
            port:
              number: 3000
      # Dify API
      - path: /dify-api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: dify-api-service
            port:
              number: 5001
---
# 管理工具 Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-tools-ingress
  namespace: voicehelper
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: admin.voicehelper.local
    http:
      paths:
      # pgAdmin
      - path: /pgadmin(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: pgadmin-service
            port:
              number: 80
      # Redis Commander
      - path: /redis(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: redis-commander-service
            port:
              number: 8081
      # Milvus Attu
      - path: /attu(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: attu-service
            port:
              number: 3000
      # Grafana 监控
      - path: /grafana(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      # Prometheus
      - path: /prometheus(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
---
# 水平自动扩缩容配置
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway-hpa
  namespace: voicehelper
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: algo-service-hpa
  namespace: voicehelper
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: algo-service
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: voicehelper
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 1
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dify-api-hpa
  namespace: voicehelper-dify
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dify-api
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# 网络策略 (安全配置)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: voicehelper-network-policy
  namespace: voicehelper
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: voicehelper
    - namespaceSelector:
        matchLabels:
          name: voicehelper-dify
    - namespaceSelector:
        matchLabels:
          name: voicehelper-monitoring
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: voicehelper
    - namespaceSelector:
        matchLabels:
          name: voicehelper-dify
    - namespaceSelector:
        matchLabels:
          name: voicehelper-monitoring
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
