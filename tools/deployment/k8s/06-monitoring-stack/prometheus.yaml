# Prometheus 监控系统部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: voicehelper
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: monitoring
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/part-of: voicehelper
    spec:
      serviceAccountName: voicehelper-monitoring
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        ports:
        - containerPort: 9090
          name: web
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--storage.tsdb.retention.time=30d'
        - '--storage.tsdb.retention.size=50GB'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
        - '--web.enable-admin-api'
        - '--log.level=info'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        - name: prometheus-rules
          mountPath: /etc/prometheus/rules
        resources:
          requests:
            cpu: "500m"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-rules
        configMap:
          name: prometheus-rules
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data-pvc
---
# Prometheus 服务
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: voicehelper
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: web
  selector:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
---
# Prometheus 数据存储 PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data-pvc
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: voicehelper-ssd
  resources:
    requests:
      storage: 100Gi
---
# Prometheus 配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 15s
      external_labels:
        cluster: 'voicehelper-k8s'
        environment: 'production'
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager.voicehelper-monitoring.svc.cluster.local:9093
    
    scrape_configs:
      # Prometheus 自身监控
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: 30s
        metrics_path: /metrics
      
      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - default
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      
      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - voicehelper
                - voicehelper-storage
                - voicehelper-monitoring
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      
      # VoiceHelper 应用服务
      - job_name: 'voicehelper-gateway'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: gateway
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
        scrape_interval: 30s
        metrics_path: /metrics
      
      - job_name: 'voicehelper-bge-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: bge-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
        scrape_interval: 30s
        metrics_path: /metrics
      
      - job_name: 'voicehelper-faiss-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: faiss-client
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
        scrape_interval: 30s
        metrics_path: /metrics
      
      # 存储服务监控
      - job_name: 'postgres-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper-storage
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: postgres-metrics
        scrape_interval: 30s
        metrics_path: /metrics
      
      - job_name: 'redis-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper-storage
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: redis-metrics
        scrape_interval: 30s
        metrics_path: /metrics
      
      - job_name: 'minio-metrics'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper-storage
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: minio
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: api
        scrape_interval: 30s
        metrics_path: /minio/v2/metrics/cluster
      
      # Node Exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - voicehelper-monitoring
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: node-exporter
        scrape_interval: 30s
        metrics_path: /metrics
---
# Prometheus 告警规则
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: rules
data:
  voicehelper.yml: |
    groups:
      - name: voicehelper.rules
        rules:
          # 服务可用性告警
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service {{ $labels.job }} is down"
              description: "Service {{ $labels.job }} has been down for more than 1 minute."
          
          # 高CPU使用率告警
          - alert: HighCPUUsage
            expr: (100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage on {{ $labels.instance }}"
              description: "CPU usage is above 80% for more than 5 minutes."
          
          # 高内存使用率告警
          - alert: HighMemoryUsage
            expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage on {{ $labels.instance }}"
              description: "Memory usage is above 85% for more than 5 minutes."
          
          # 磁盘空间不足告警
          - alert: DiskSpaceLow
            expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 90
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Disk space low on {{ $labels.instance }}"
              description: "Disk usage is above 90% for more than 5 minutes."
          
          # Pod重启频繁告警
          - alert: PodRestartingFrequently
            expr: rate(kube_pod_container_status_restarts_total[1h]) * 3600 > 5
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Pod {{ $labels.pod }} is restarting frequently"
              description: "Pod {{ $labels.pod }} has restarted more than 5 times in the last hour."
          
          # BGE服务响应时间告警
          - alert: BGEServiceHighLatency
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="voicehelper-bge-service"}[5m])) > 2
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "BGE service high latency"
              description: "BGE service 95th percentile latency is above 2 seconds."
          
          # FAISS服务响应时间告警
          - alert: FAISSServiceHighLatency
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="voicehelper-faiss-service"}[5m])) > 1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "FAISS service high latency"
              description: "FAISS service 95th percentile latency is above 1 second."
          
          # Gateway错误率告警
          - alert: GatewayHighErrorRate
            expr: rate(http_requests_total{job="voicehelper-gateway",status=~"5.."}[5m]) / rate(http_requests_total{job="voicehelper-gateway"}[5m]) > 0.05
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Gateway high error rate"
              description: "Gateway error rate is above 5% for more than 5 minutes."
          
          # 数据库连接数告警
          - alert: PostgreSQLHighConnections
            expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "PostgreSQL high connection usage"
              description: "PostgreSQL connection usage is above 80%."
          
          # Redis内存使用告警
          - alert: RedisHighMemoryUsage
            expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Redis high memory usage"
              description: "Redis memory usage is above 90%."
---
# Prometheus ServiceMonitor CRD (如果使用Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-self
  namespace: voicehelper-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: monitoring
  endpoints:
  - port: web
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
