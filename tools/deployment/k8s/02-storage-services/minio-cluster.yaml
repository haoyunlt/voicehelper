# MinIO 分布式对象存储集群
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: voicehelper
spec:
  serviceName: minio
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: voicehelper
    spec:
      serviceAccountName: voicehelper-app
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
      - name: minio
        image: minio/minio:RELEASE.2024-01-16T16-07-38Z
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        command:
        - /bin/bash
        - -c
        args:
        - minio server --console-address ":9001" http://minio-{0...3}.minio.voicehelper-storage.svc.cluster.local/data
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: "public"
        - name: MINIO_PROMETHEUS_URL
          value: "http://prometheus.voicehelper-monitoring.svc.cluster.local:9090"
        - name: MINIO_BROWSER_REDIRECT_URL
          value: "http://minio.voicehelper.local"
        volumeMounts:
        - name: minio-data
          mountPath: /data
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: minio-data
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: server
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: voicehelper-standard
      resources:
        requests:
          storage: 500Gi
---
# MinIO API 服务
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: voicehelper
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: api
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: server
---
# MinIO Console 服务
apiVersion: v1
kind: Service
metadata:
  name: minio-console
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: console
    app.kubernetes.io/part-of: voicehelper
spec:
  type: ClusterIP
  ports:
  - port: 9001
    targetPort: 9001
    protocol: TCP
    name: console
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: server
---
# MinIO 客户端服务
apiVersion: v1
kind: Service
metadata:
  name: minio-client
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: client
    app.kubernetes.io/part-of: voicehelper
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: api
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: server
---
# MinIO 初始化 Job
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-init
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: init
    app.kubernetes.io/part-of: voicehelper
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: init
    spec:
      serviceAccountName: voicehelper-app
      restartPolicy: OnFailure
      containers:
      - name: minio-init
        image: minio/mc:RELEASE.2024-01-13T08-44-48Z
        command:
        - /bin/sh
        - -c
        - |
          # 等待MinIO服务启动
          sleep 60
          
          # 配置mc客户端
          mc alias set minio http://minio.voicehelper-storage.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
          
          # 创建应用所需的存储桶
          mc mb minio/voicehelper-data --ignore-existing
          mc mb minio/voicehelper-models --ignore-existing
          mc mb minio/voicehelper-audio --ignore-existing
          mc mb minio/voicehelper-logs --ignore-existing
          mc mb minio/voicehelper-backups --ignore-existing
          
          # 设置存储桶策略
          mc anonymous set public minio/voicehelper-models
          mc anonymous set download minio/voicehelper-audio
          
          # 创建用户和访问密钥
          mc admin user add minio voicehelper VoiceHelperUser2025!
          mc admin policy set minio readwrite user=voicehelper
          
          # 设置生命周期策略
          cat > /tmp/lifecycle.json << EOF
          {
            "Rules": [
              {
                "ID": "DeleteOldLogs",
                "Status": "Enabled",
                "Filter": {
                  "Prefix": "logs/"
                },
                "Expiration": {
                  "Days": 30
                }
              },
              {
                "ID": "TransitionToIA",
                "Status": "Enabled",
                "Filter": {
                  "Prefix": "backups/"
                },
                "Transitions": [
                  {
                    "Days": 30,
                    "StorageClass": "STANDARD_IA"
                  }
                ]
              }
            ]
          }
          EOF
          
          mc ilm set /tmp/lifecycle.json minio/voicehelper-logs
          mc ilm set /tmp/lifecycle.json minio/voicehelper-backups
          
          echo "MinIO initialization completed successfully"
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
# MinIO 负载均衡器
apiVersion: v1
kind: Service
metadata:
  name: minio-lb
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: loadbalancer
    app.kubernetes.io/part-of: voicehelper
spec:
  type: LoadBalancer
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: api
  - port: 9001
    targetPort: 9001
    protocol: TCP
    name: console
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: server
---
# MinIO 监控配置
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: minio-metrics
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: voicehelper
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/component: server
  endpoints:
  - port: api
    path: /minio/v2/metrics/cluster
    interval: 30s
    scrapeTimeout: 10s
---
# MinIO 备份 CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: minio-backup
  namespace: voicehelper-storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: voicehelper
spec:
  schedule: "0 2 * * *"  # 每天凌晨2点执行备份
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: minio
            app.kubernetes.io/component: backup
        spec:
          serviceAccountName: voicehelper-app
          restartPolicy: OnFailure
          containers:
          - name: minio-backup
            image: minio/mc:RELEASE.2024-01-13T08-44-48Z
            command:
            - /bin/sh
            - -c
            - |
              # 配置mc客户端
              mc alias set source http://minio.voicehelper-storage.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
              
              # 创建备份目录
              BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
              BACKUP_PATH="backups/minio_backup_$BACKUP_DATE"
              
              # 同步数据到备份存储桶
              mc mirror source/voicehelper-data source/voicehelper-backups/$BACKUP_PATH/data
              mc mirror source/voicehelper-models source/voicehelper-backups/$BACKUP_PATH/models
              
              # 压缩备份
              cd /tmp
              mc cp --recursive source/voicehelper-backups/$BACKUP_PATH .
              tar -czf minio_backup_$BACKUP_DATE.tar.gz $BACKUP_PATH
              mc cp minio_backup_$BACKUP_DATE.tar.gz source/voicehelper-backups/compressed/
              
              # 清理本地临时文件
              rm -rf $BACKUP_PATH minio_backup_$BACKUP_DATE.tar.gz
              
              echo "Backup completed: $BACKUP_PATH"
            env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: access-key
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secret-key
            resources:
              requests:
                cpu: "200m"
                memory: "256Mi"
              limits:
                cpu: "500m"
                memory: "512Mi"
