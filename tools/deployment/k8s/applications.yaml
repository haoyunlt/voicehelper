# VoiceHelper 核心应用服务 Kubernetes 部署配置

# Go API 网关
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: voicehelper
  labels:
    app: gateway
    component: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
        component: api-gateway
    spec:
      containers:
      - name: gateway
        image: voicehelper/gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: GIN_MODE
          value: "release"
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: GATEWAY_PORT
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: GATEWAY_SERVICE_NAME
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: POSTGRES_PORT
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: JWT_SECRET
        - name: WECHAT_APP_ID
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: WECHAT_APP_ID
        - name: WECHAT_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: WECHAT_APP_SECRET
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: logs
        emptyDir: {}
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z postgres-service 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
      - name: wait-for-redis
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z redis-service 6379; do
            echo "Waiting for Redis..."
            sleep 2
          done
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: voicehelper
  labels:
    app: gateway
spec:
  selector:
    app: gateway
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
# Python 算法服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algo-service
  namespace: voicehelper
  labels:
    app: algo-service
    component: ai-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: algo-service
  template:
    metadata:
      labels:
        app: algo-service
        component: ai-service
    spec:
      containers:
      - name: algo-service
        image: voicehelper/algo-service:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: ALGO_PORT
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: ALGO_SERVICE_NAME
        - name: PYTHONPATH
          value: "/app"
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: POSTGRES_HOST
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: REDIS_PASSWORD
        - name: MILVUS_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: MILVUS_HOST
        - name: MILVUS_PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: MILVUS_PORT
        - name: NEO4J_URI
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NEO4J_URI
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: NEO4J_PASSWORD
        - name: NATS_URL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NATS_URL
        # AI 模型 API 密钥
        - name: ARK_API_KEY
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: ARK_API_KEY
        - name: GLM_API_KEY
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: GLM_API_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: ANTHROPIC_API_KEY
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: models
          mountPath: /app/models
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: models
        emptyDir: {}
      - name: logs
        emptyDir: {}
      initContainers:
      - name: wait-for-dependencies
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          echo "Waiting for dependencies..."
          until nc -z postgres-service 5432; do sleep 2; done
          until nc -z redis-service 6379; do sleep 2; done
          until nc -z milvus-service 19530; do sleep 2; done
          until nc -z neo4j-service 7687; do sleep 2; done
          until nc -z nats-service 4222; do sleep 2; done
          echo "All dependencies ready"
---
apiVersion: v1
kind: Service
metadata:
  name: algo-service
  namespace: voicehelper
  labels:
    app: algo-service
spec:
  selector:
    app: algo-service
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
# 语音处理服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voice-service
  namespace: voicehelper
  labels:
    app: voice-service
    component: voice-processing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: voice-service
  template:
    metadata:
      labels:
        app: voice-service
        component: voice-processing
    spec:
      containers:
      - name: voice-service
        image: voicehelper/voice-service:latest
        ports:
        - containerPort: 8001
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: VOICE_PORT
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: VOICE_SERVICE_NAME
        - name: PYTHONPATH
          value: "/app"
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: POSTGRES_HOST
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voicehelper-secrets
              key: REDIS_PASSWORD
        - name: NATS_URL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NATS_URL
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: logs
        emptyDir: {}
      initContainers:
      - name: wait-for-dependencies
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z postgres-service 5432; do sleep 2; done
          until nc -z redis-service 6379; do sleep 2; done
          until nc -z nats-service 4222; do sleep 2; done
---
apiVersion: v1
kind: Service
metadata:
  name: voice-service
  namespace: voicehelper
  labels:
    app: voice-service
spec:
  selector:
    app: voice-service
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
  type: ClusterIP
---
# Next.js 前端服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: voicehelper
  labels:
    app: frontend
    component: web-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: web-app
    spec:
      containers:
      - name: frontend
        image: voicehelper/frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: FRONTEND_PORT
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NEXT_PUBLIC_API_URL
        - name: NEXT_PUBLIC_WS_URL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NEXT_PUBLIC_WS_URL
        - name: NEXT_PUBLIC_VOICE_WS_URL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: NEXT_PUBLIC_VOICE_WS_URL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
      initContainers:
      - name: wait-for-gateway
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z gateway-service 8080; do
            echo "Waiting for gateway..."
            sleep 2
          done
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: voicehelper
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
