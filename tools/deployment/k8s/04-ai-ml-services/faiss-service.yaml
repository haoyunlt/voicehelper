# FAISS 向量搜索服务部署
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: faiss-service
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: vector-search
    app.kubernetes.io/part-of: voicehelper
spec:
  serviceName: faiss-service
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: faiss-service
      app.kubernetes.io/component: vector-search
  template:
    metadata:
      labels:
        app.kubernetes.io/name: faiss-service
        app.kubernetes.io/component: vector-search
        app.kubernetes.io/part-of: voicehelper
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: voicehelper-app
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      initContainers:
      - name: init-faiss-data
        image: busybox:1.35
        command:
        - /bin/sh
        - -c
        - |
          # 创建数据目录结构
          mkdir -p /data/indices
          mkdir -p /data/metadata
          mkdir -p /data/backups
          mkdir -p /data/logs
          chown -R 1000:1000 /data
          echo "FAISS data directories initialized"
        volumeMounts:
        - name: faiss-data
          mountPath: /data
        securityContext:
          runAsUser: 0
      containers:
      - name: faiss-service
        image: voicehelper/faiss-service:latest
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: FAISS_INDEX_TYPE
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: FAISS_INDEX_TYPE
        - name: FAISS_NLIST
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: FAISS_NLIST
        - name: FAISS_NPROBE
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: FAISS_NPROBE
        - name: VECTOR_DIMENSION
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: VECTOR_DIMENSION
        - name: INDEX_SAVE_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: INDEX_SAVE_INTERVAL
        - name: DATA_DIR
          value: "/data"
        - name: PORT
          value: "8081"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: LOG_LEVEL
        - name: PROMETHEUS_ENABLED
          value: "true"
        - name: JAEGER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: voicehelper-config
              key: JAEGER_ENDPOINT
        - name: REPLICA_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_PEERS
          value: "faiss-service-0.faiss-service.voicehelper.svc.cluster.local:8081,faiss-service-1.faiss-service.voicehelper.svc.cluster.local:8081"
        volumeMounts:
        - name: faiss-data
          mountPath: /data
        - name: tmp-dir
          mountPath: /tmp
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
      volumes:
      - name: tmp-dir
        emptyDir: {}
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "ai-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
  volumeClaimTemplates:
  - metadata:
      name: faiss-data
      labels:
        app.kubernetes.io/name: faiss-service
        app.kubernetes.io/component: vector-search
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: voicehelper-ssd
      resources:
        requests:
          storage: 200Gi
---
# FAISS 服务
apiVersion: v1
kind: Service
metadata:
  name: faiss-service
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: vector-search
    app.kubernetes.io/part-of: voicehelper
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: vector-search
---
# FAISS 客户端服务
apiVersion: v1
kind: Service
metadata:
  name: faiss-client
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: client
    app.kubernetes.io/part-of: voicehelper
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: vector-search
---
# FAISS 数据同步 Job
apiVersion: batch/v1
kind: Job
metadata:
  name: faiss-data-sync
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: sync
    app.kubernetes.io/part-of: voicehelper
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: faiss-service
        app.kubernetes.io/component: sync
    spec:
      serviceAccountName: voicehelper-app
      restartPolicy: OnFailure
      containers:
      - name: faiss-sync
        image: voicehelper/faiss-service:latest
        command:
        - /bin/bash
        - -c
        - |
          # 等待FAISS服务启动
          sleep 60
          
          # 同步索引数据
          python -c "
          import requests
          import time
          import json
          
          # 获取所有FAISS节点
          nodes = [
              'faiss-service-0.faiss-service.voicehelper.svc.cluster.local:8081',
              'faiss-service-1.faiss-service.voicehelper.svc.cluster.local:8081'
          ]
          
          # 等待所有节点就绪
          for node in nodes:
              while True:
                  try:
                      response = requests.get(f'http://{node}/ready', timeout=5)
                      if response.status_code == 200:
                          print(f'Node {node} is ready')
                          break
                  except:
                      print(f'Waiting for node {node}...')
                      time.sleep(10)
          
          # 触发索引同步
          for i, node in enumerate(nodes):
              try:
                  sync_data = {
                      'source_node': nodes[0] if i > 0 else nodes[1],
                      'sync_type': 'full'
                  }
                  response = requests.post(f'http://{node}/sync', json=sync_data, timeout=30)
                  if response.status_code == 200:
                      print(f'Sync initiated for node {node}')
                  else:
                      print(f'Sync failed for node {node}: {response.text}')
              except Exception as e:
                  print(f'Error syncing node {node}: {e}')
          
          print('FAISS data synchronization completed')
          "
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
---
# FAISS 备份 CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: faiss-backup
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: voicehelper
spec:
  schedule: "0 3 * * *"  # 每天凌晨3点执行备份
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: faiss-service
            app.kubernetes.io/component: backup
        spec:
          serviceAccountName: voicehelper-app
          restartPolicy: OnFailure
          containers:
          - name: faiss-backup
            image: voicehelper/faiss-service:latest
            command:
            - /bin/bash
            - -c
            - |
              # 创建备份
              BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
              BACKUP_DIR="/tmp/faiss_backup_$BACKUP_DATE"
              
              # 调用FAISS服务的备份API
              python -c "
              import requests
              import os
              import shutil
              
              backup_date = os.environ['BACKUP_DATE']
              nodes = [
                  'faiss-service-0.faiss-service.voicehelper.svc.cluster.local:8081',
                  'faiss-service-1.faiss-service.voicehelper.svc.cluster.local:8081'
              ]
              
              for i, node in enumerate(nodes):
                  try:
                      backup_data = {
                          'backup_name': f'backup_{backup_date}_node_{i}',
                          'include_metadata': True
                      }
                      response = requests.post(f'http://{node}/backup', json=backup_data, timeout=300)
                      if response.status_code == 200:
                          print(f'Backup created for node {node}')
                      else:
                          print(f'Backup failed for node {node}: {response.text}')
                  except Exception as e:
                      print(f'Error backing up node {node}: {e}')
              
              print('FAISS backup completed')
              "
            env:
            - name: BACKUP_DATE
              value: "$(date +%Y%m%d_%H%M%S)"
            resources:
              requests:
                cpu: "200m"
                memory: "256Mi"
              limits:
                cpu: "500m"
                memory: "512Mi"
---
# FAISS 服务监控
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: faiss-service-metrics
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: voicehelper
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: faiss-service
      app.kubernetes.io/component: vector-search
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
---
# FAISS 服务网络策略
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: faiss-service-netpol
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: voicehelper
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: faiss-service
      app.kubernetes.io/component: vector-search
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: voicehelper
    - namespaceSelector:
        matchLabels:
          name: voicehelper-monitoring
    ports:
    - protocol: TCP
      port: 8081
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: faiss-service
          app.kubernetes.io/component: vector-search
    ports:
    - protocol: TCP
      port: 8081
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: faiss-service
          app.kubernetes.io/component: vector-search
    ports:
    - protocol: TCP
      port: 8081
  - to:
    - namespaceSelector:
        matchLabels:
          name: voicehelper-monitoring
    ports:
    - protocol: TCP
      port: 14268  # Jaeger
---
# FAISS 服务 Pod 中断预算
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: faiss-service-pdb
  namespace: voicehelper
  labels:
    app.kubernetes.io/name: faiss-service
    app.kubernetes.io/component: availability
    app.kubernetes.io/part-of: voicehelper
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: faiss-service
      app.kubernetes.io/component: vector-search
